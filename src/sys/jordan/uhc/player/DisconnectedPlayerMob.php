<?php


namespace sys\jordan\uhc\player;


use pocketmine\entity\Zombie;
use pocketmine\item\Item;
use pocketmine\level\Level;
use pocketmine\nbt\tag\CompoundTag;
use sys\jordan\core\CoreBase;

class DisconnectedPlayerMob extends Zombie {

	/** @var DisconnectedPlayer|null */
	private $disconnectedPlayer = null;

	/**
	 * DisconnectedPlayerMob constructor.
	 * @param Level $level
	 * @param CompoundTag $nbt
	 */
	public function __construct(Level $level, CompoundTag $nbt) {
		parent::__construct($level, $nbt);
	}

	/**
	 * @return DisconnectedPlayer|null
	 */
	public function getDisconnectedPlayer(): ?DisconnectedPlayer {
		return $this->disconnectedPlayer;
	}

	/**
	 * @param DisconnectedPlayer $disconnectedPlayer
	 */
	public function setDisconnectedPlayer(DisconnectedPlayer $disconnectedPlayer): void {
		$this->disconnectedPlayer = $disconnectedPlayer;
	}

	/**
	 * @return bool
	 */
	public function hasDisconnectedPlayer(): bool {
		return $this->disconnectedPlayer instanceof DisconnectedPlayer;
	}

	/**
	 * @return Item[]
	 */
	public function getContents(): array {
		if($this->getDisconnectedPlayer() instanceof DisconnectedPlayer) {
			return $this->getDisconnectedPlayer()->getContents();
		}
		return [];
	}

	/**
	 * @return Item[]
	 */
	public function getDrops(): array {
		return array_merge($this->getContents(), $this->getArmorInventory()->getContents());
	}

	public function close(): void {
		if($this->closed) {
			CoreBase::getInstance()->getLogger()->warning("Attempted to close a closed disconnected player");
		}
		parent::close(); // TODO: Change the autogenerated stub
	}

	/**
	 * @return int
	 */
	public function getXpDropAmount(): int {
		return 0;
	}

}